package loops

Task_1_1_1 - 1.1.1. Перемножить числа от 1 до числа (включительно) введенного через аргумент к исполняемой программе. Используя только цикл.
Task_1_1_2 - 1..1.2*. Перемножить числа от 1 до числа (включительно) введенного через аргумент к исполняемой программе. Используя рекурсию.
Task_1_2   - 1.2. Все цифры из числа введенного через аргумент к исполняемой программе перемножить между собой и вывести ход вычислений в консоль.
Task_1_3   - 1.3. Возведение в степень.
Task_1_4   - 1.4.* Умножать число long a = 1; пока не произойдёт переполнение.
Task_1_5   - 1.5. Задачи в презентации.
Task_1_6   - 1.6. Вывести таблицу умножения в консоль.


package arrays

Task_2_1_1_1     - 2.1.1.1. Пример в отдельном классе с main. int[] container = arrayFromConsole(). 
Task_2_1_2_1     - 2.1.2.1. Пример в отдельном классе с main. int[] container = arrayRandom(5, 100).
ArraysIteration  - 2.2 Создать класс ArraysIteration.
IArraysOperation - 2.3* Выполнить задание 2.2 иным способом. Создать интерфейс IArraysOperation.Написать 4 отдельных класса и реализовать данный интерфейс:
DoWhileOperation - 2.3.1. DoWhileOperation - во всех методах можно использовать только do....while.
WhileOperation   - 2.3.2. WhileOperation - во всех методах можно использовать только while.
ForOperation     - 2.3.3. ForOperation - во всех методах можно использовать только for.
ForEachOperation - 2.3.4. ForEachOperation - во всех методах можно использовать только foreach.
Task_2_4         - 2.4 Задачи в презентации.


package utils

ArraysUtils - 2.1. Создать класс ArraysUtils
SortsUtils  - 4.1. Создать класс SortsUtils.


package sorts

Bubble sort flowchart.drawio && bubble sort.svg - 3. Нарисовать блок схему алгоритма работы пузырьковой сортировки.

SortsMain - 4.2. Создать класс SortsMain. Все проверки пишутся в main.
